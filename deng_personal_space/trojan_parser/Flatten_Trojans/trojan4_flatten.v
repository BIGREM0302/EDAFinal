/* Generated by Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 16.0.0 -fPIC -O3) */

module Trojan4(clk, rst, key, leak);
  wire [63:0] _000_;
  wire [15:0] _001_;
  wire _002_;
  wire _003_;
  input clk;
  wire clk;
  input [63:0] key;
  wire [63:0] key;
  output [63:0] leak;
  wire [63:0] leak;
  wire [15:0] lfsr;
  input rst;
  wire rst;
  \xor  _004_ (
    .A(key[6]),
    .B(lfsr[6]),
    .Y(_000_[6])
  );
  \xor  _005_ (
    .A(key[7]),
    .B(lfsr[7]),
    .Y(_000_[7])
  );
  \xor  _006_ (
    .A(key[8]),
    .B(lfsr[8]),
    .Y(_000_[8])
  );
  \xor  _007_ (
    .A(key[9]),
    .B(lfsr[9]),
    .Y(_000_[9])
  );
  \xor  _008_ (
    .A(key[10]),
    .B(lfsr[10]),
    .Y(_000_[10])
  );
  \xor  _009_ (
    .A(key[11]),
    .B(lfsr[11]),
    .Y(_000_[11])
  );
  \xor  _010_ (
    .A(key[12]),
    .B(lfsr[12]),
    .Y(_000_[12])
  );
  \xor  _011_ (
    .A(key[13]),
    .B(lfsr[13]),
    .Y(_000_[13])
  );
  \xor  _012_ (
    .A(key[14]),
    .B(lfsr[14]),
    .Y(_000_[14])
  );
  \xor  _013_ (
    .A(key[15]),
    .B(lfsr[15]),
    .Y(_000_[15])
  );
  \xor  _014_ (
    .A(key[16]),
    .B(lfsr[0]),
    .Y(_000_[16])
  );
  \xor  _015_ (
    .A(key[17]),
    .B(lfsr[1]),
    .Y(_000_[17])
  );
  \xor  _016_ (
    .A(key[18]),
    .B(lfsr[2]),
    .Y(_000_[18])
  );
  \xor  _017_ (
    .A(key[19]),
    .B(lfsr[3]),
    .Y(_000_[19])
  );
  \xor  _018_ (
    .A(key[20]),
    .B(lfsr[4]),
    .Y(_000_[20])
  );
  \xor  _019_ (
    .A(key[21]),
    .B(lfsr[5]),
    .Y(_000_[21])
  );
  \xor  _020_ (
    .A(lfsr[6]),
    .B(key[22]),
    .Y(_000_[22])
  );
  \xor  _021_ (
    .A(lfsr[7]),
    .B(key[23]),
    .Y(_000_[23])
  );
  \xor  _022_ (
    .A(lfsr[8]),
    .B(key[24]),
    .Y(_000_[24])
  );
  \xor  _023_ (
    .A(lfsr[9]),
    .B(key[25]),
    .Y(_000_[25])
  );
  \xor  _024_ (
    .A(lfsr[10]),
    .B(key[26]),
    .Y(_000_[26])
  );
  \xor  _025_ (
    .A(lfsr[11]),
    .B(key[27]),
    .Y(_000_[27])
  );
  \xor  _026_ (
    .A(lfsr[12]),
    .B(key[28]),
    .Y(_000_[28])
  );
  \xor  _027_ (
    .A(lfsr[13]),
    .B(key[29]),
    .Y(_000_[29])
  );
  \xor  _028_ (
    .A(lfsr[14]),
    .B(key[30]),
    .Y(_000_[30])
  );
  \xor  _029_ (
    .A(lfsr[15]),
    .B(key[31]),
    .Y(_000_[31])
  );
  \xor  _030_ (
    .A(lfsr[0]),
    .B(key[32]),
    .Y(_000_[32])
  );
  \xor  _031_ (
    .A(lfsr[1]),
    .B(key[33]),
    .Y(_000_[33])
  );
  \xor  _032_ (
    .A(lfsr[2]),
    .B(key[34]),
    .Y(_000_[34])
  );
  \xor  _033_ (
    .A(lfsr[3]),
    .B(key[35]),
    .Y(_000_[35])
  );
  \xor  _034_ (
    .A(lfsr[4]),
    .B(key[36]),
    .Y(_000_[36])
  );
  \xor  _035_ (
    .A(lfsr[5]),
    .B(key[37]),
    .Y(_000_[37])
  );
  \xor  _036_ (
    .A(lfsr[6]),
    .B(key[38]),
    .Y(_000_[38])
  );
  \xor  _037_ (
    .A(lfsr[7]),
    .B(key[39]),
    .Y(_000_[39])
  );
  \xor  _038_ (
    .A(lfsr[8]),
    .B(key[40]),
    .Y(_000_[40])
  );
  \xor  _039_ (
    .A(lfsr[9]),
    .B(key[41]),
    .Y(_000_[41])
  );
  \xor  _040_ (
    .A(lfsr[10]),
    .B(key[42]),
    .Y(_000_[42])
  );
  \xor  _041_ (
    .A(lfsr[11]),
    .B(key[43]),
    .Y(_000_[43])
  );
  \xor  _042_ (
    .A(lfsr[12]),
    .B(key[44]),
    .Y(_000_[44])
  );
  \xor  _043_ (
    .A(lfsr[13]),
    .B(key[45]),
    .Y(_000_[45])
  );
  \xor  _044_ (
    .A(lfsr[14]),
    .B(key[46]),
    .Y(_000_[46])
  );
  \xor  _045_ (
    .A(lfsr[15]),
    .B(key[47]),
    .Y(_000_[47])
  );
  \xor  _046_ (
    .A(lfsr[0]),
    .B(key[48]),
    .Y(_000_[48])
  );
  \xor  _047_ (
    .A(lfsr[1]),
    .B(key[49]),
    .Y(_000_[49])
  );
  \xor  _048_ (
    .A(lfsr[2]),
    .B(key[50]),
    .Y(_000_[50])
  );
  \xor  _049_ (
    .A(lfsr[3]),
    .B(key[51]),
    .Y(_000_[51])
  );
  \xor  _050_ (
    .A(lfsr[4]),
    .B(key[52]),
    .Y(_000_[52])
  );
  \xor  _051_ (
    .A(lfsr[5]),
    .B(key[53]),
    .Y(_000_[53])
  );
  \xor  _052_ (
    .A(lfsr[6]),
    .B(key[54]),
    .Y(_000_[54])
  );
  \xor  _053_ (
    .A(lfsr[7]),
    .B(key[55]),
    .Y(_000_[55])
  );
  \xor  _054_ (
    .A(lfsr[8]),
    .B(key[56]),
    .Y(_000_[56])
  );
  \xor  _055_ (
    .A(lfsr[9]),
    .B(key[57]),
    .Y(_000_[57])
  );
  \xor  _056_ (
    .A(lfsr[10]),
    .B(key[58]),
    .Y(_000_[58])
  );
  \xor  _057_ (
    .A(lfsr[11]),
    .B(key[59]),
    .Y(_000_[59])
  );
  \xor  _058_ (
    .A(lfsr[12]),
    .B(key[60]),
    .Y(_000_[60])
  );
  \xor  _059_ (
    .A(lfsr[13]),
    .B(key[61]),
    .Y(_000_[61])
  );
  \xor  _060_ (
    .A(lfsr[14]),
    .B(key[62]),
    .Y(_000_[62])
  );
  \xor  _061_ (
    .A(lfsr[15]),
    .B(key[63]),
    .Y(_000_[63])
  );
  \xor  _062_ (
    .A(lfsr[13]),
    .B(lfsr[15]),
    .Y(_002_)
  );
  \xnor  _063_ (
    .A(lfsr[10]),
    .B(lfsr[12]),
    .Y(_003_)
  );
  \xnor  _064_ (
    .A(_002_),
    .B(_003_),
    .Y(_001_[0])
  );
  \xor  _065_ (
    .A(lfsr[0]),
    .B(key[0]),
    .Y(_000_[0])
  );
  \xor  _066_ (
    .A(lfsr[1]),
    .B(key[1]),
    .Y(_000_[1])
  );
  \xor  _067_ (
    .A(lfsr[2]),
    .B(key[2]),
    .Y(_000_[2])
  );
  \xor  _068_ (
    .A(lfsr[3]),
    .B(key[3]),
    .Y(_000_[3])
  );
  \xor  _069_ (
    .A(lfsr[4]),
    .B(key[4]),
    .Y(_000_[4])
  );
  \xor  _070_ (
    .A(lfsr[5]),
    .B(key[5]),
    .Y(_000_[5])
  );
  dff _071_ (
    .C(clk),
    .D(_000_[0]),
    .Q(leak[0]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _072_ (
    .C(clk),
    .D(_000_[1]),
    .Q(leak[1]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _073_ (
    .C(clk),
    .D(_000_[2]),
    .Q(leak[2]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _074_ (
    .C(clk),
    .D(_000_[3]),
    .Q(leak[3]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _075_ (
    .C(clk),
    .D(_000_[4]),
    .Q(leak[4]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _076_ (
    .C(clk),
    .D(_000_[5]),
    .Q(leak[5]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _077_ (
    .C(clk),
    .D(_000_[6]),
    .Q(leak[6]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _078_ (
    .C(clk),
    .D(_000_[7]),
    .Q(leak[7]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _079_ (
    .C(clk),
    .D(_000_[8]),
    .Q(leak[8]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _080_ (
    .C(clk),
    .D(_000_[9]),
    .Q(leak[9]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _081_ (
    .C(clk),
    .D(_000_[10]),
    .Q(leak[10]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _082_ (
    .C(clk),
    .D(_000_[11]),
    .Q(leak[11]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _083_ (
    .C(clk),
    .D(_000_[12]),
    .Q(leak[12]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _084_ (
    .C(clk),
    .D(_000_[13]),
    .Q(leak[13]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _085_ (
    .C(clk),
    .D(_000_[14]),
    .Q(leak[14]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _086_ (
    .C(clk),
    .D(_000_[15]),
    .Q(leak[15]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _087_ (
    .C(clk),
    .D(_000_[16]),
    .Q(leak[16]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _088_ (
    .C(clk),
    .D(_000_[17]),
    .Q(leak[17]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _089_ (
    .C(clk),
    .D(_000_[18]),
    .Q(leak[18]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _090_ (
    .C(clk),
    .D(_000_[19]),
    .Q(leak[19]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _091_ (
    .C(clk),
    .D(_000_[20]),
    .Q(leak[20]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _092_ (
    .C(clk),
    .D(_000_[21]),
    .Q(leak[21]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _093_ (
    .C(clk),
    .D(_000_[22]),
    .Q(leak[22]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _094_ (
    .C(clk),
    .D(_000_[23]),
    .Q(leak[23]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _095_ (
    .C(clk),
    .D(_000_[24]),
    .Q(leak[24]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _096_ (
    .C(clk),
    .D(_000_[25]),
    .Q(leak[25]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _097_ (
    .C(clk),
    .D(_000_[26]),
    .Q(leak[26]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _098_ (
    .C(clk),
    .D(_000_[27]),
    .Q(leak[27]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _099_ (
    .C(clk),
    .D(_000_[28]),
    .Q(leak[28]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _100_ (
    .C(clk),
    .D(_000_[29]),
    .Q(leak[29]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _101_ (
    .C(clk),
    .D(_000_[30]),
    .Q(leak[30]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _102_ (
    .C(clk),
    .D(_000_[31]),
    .Q(leak[31]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _103_ (
    .C(clk),
    .D(_000_[32]),
    .Q(leak[32]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _104_ (
    .C(clk),
    .D(_000_[33]),
    .Q(leak[33]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _105_ (
    .C(clk),
    .D(_000_[34]),
    .Q(leak[34]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _106_ (
    .C(clk),
    .D(_000_[35]),
    .Q(leak[35]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _107_ (
    .C(clk),
    .D(_000_[36]),
    .Q(leak[36]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _108_ (
    .C(clk),
    .D(_000_[37]),
    .Q(leak[37]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _109_ (
    .C(clk),
    .D(_000_[38]),
    .Q(leak[38]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _110_ (
    .C(clk),
    .D(_000_[39]),
    .Q(leak[39]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _111_ (
    .C(clk),
    .D(_000_[40]),
    .Q(leak[40]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _112_ (
    .C(clk),
    .D(_000_[41]),
    .Q(leak[41]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _113_ (
    .C(clk),
    .D(_000_[42]),
    .Q(leak[42]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _114_ (
    .C(clk),
    .D(_000_[43]),
    .Q(leak[43]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _115_ (
    .C(clk),
    .D(_000_[44]),
    .Q(leak[44]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _116_ (
    .C(clk),
    .D(_000_[45]),
    .Q(leak[45]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _117_ (
    .C(clk),
    .D(_000_[46]),
    .Q(leak[46]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _118_ (
    .C(clk),
    .D(_000_[47]),
    .Q(leak[47]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _119_ (
    .C(clk),
    .D(_000_[48]),
    .Q(leak[48]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _120_ (
    .C(clk),
    .D(_000_[49]),
    .Q(leak[49]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _121_ (
    .C(clk),
    .D(_000_[50]),
    .Q(leak[50]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _122_ (
    .C(clk),
    .D(_000_[51]),
    .Q(leak[51]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _123_ (
    .C(clk),
    .D(_000_[52]),
    .Q(leak[52]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _124_ (
    .C(clk),
    .D(_000_[53]),
    .Q(leak[53]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _125_ (
    .C(clk),
    .D(_000_[54]),
    .Q(leak[54]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _126_ (
    .C(clk),
    .D(_000_[55]),
    .Q(leak[55]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _127_ (
    .C(clk),
    .D(_000_[56]),
    .Q(leak[56]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _128_ (
    .C(clk),
    .D(_000_[57]),
    .Q(leak[57]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _129_ (
    .C(clk),
    .D(_000_[58]),
    .Q(leak[58]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _130_ (
    .C(clk),
    .D(_000_[59]),
    .Q(leak[59]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _131_ (
    .C(clk),
    .D(_000_[60]),
    .Q(leak[60]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _132_ (
    .C(clk),
    .D(_000_[61]),
    .Q(leak[61]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _133_ (
    .C(clk),
    .D(_000_[62]),
    .Q(leak[62]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _134_ (
    .C(clk),
    .D(_000_[63]),
    .Q(leak[63]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _135_ (
    .C(clk),
    .D(_001_[0]),
    .Q(lfsr[0]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _136_ (
    .C(clk),
    .D(lfsr[0]),
    .Q(lfsr[1]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _137_ (
    .C(clk),
    .D(lfsr[1]),
    .Q(lfsr[2]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _138_ (
    .C(clk),
    .D(lfsr[2]),
    .Q(lfsr[3]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _139_ (
    .C(clk),
    .D(lfsr[3]),
    .Q(lfsr[4]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _140_ (
    .C(clk),
    .D(lfsr[4]),
    .Q(lfsr[5]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _141_ (
    .C(clk),
    .D(lfsr[5]),
    .Q(lfsr[6]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _142_ (
    .C(clk),
    .D(lfsr[6]),
    .Q(lfsr[7]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _143_ (
    .C(clk),
    .D(lfsr[7]),
    .Q(lfsr[8]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _144_ (
    .C(clk),
    .D(lfsr[8]),
    .Q(lfsr[9]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _145_ (
    .C(clk),
    .D(lfsr[9]),
    .Q(lfsr[10]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _146_ (
    .C(clk),
    .D(lfsr[10]),
    .Q(lfsr[11]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _147_ (
    .C(clk),
    .D(lfsr[11]),
    .Q(lfsr[12]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _148_ (
    .C(clk),
    .D(lfsr[12]),
    .Q(lfsr[13]),
    .RST(rst),
    .SET(1'h0)
  );
  dff _149_ (
    .C(clk),
    .D(lfsr[13]),
    .Q(lfsr[14]),
    .RST(1'h0),
    .SET(rst)
  );
  dff _150_ (
    .C(clk),
    .D(lfsr[14]),
    .Q(lfsr[15]),
    .RST(1'h0),
    .SET(rst)
  );
  assign _001_[15:1] = lfsr[14:0];
endmodule
