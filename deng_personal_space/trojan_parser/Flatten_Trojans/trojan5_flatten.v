/* Generated by Yosys 0.54 (git sha1 db72ec3bde296a9512b2d1e6fabf81cfb07c2c1b, clang++ 16.0.0 -fPIC -O3) */

module Trojan5(pon_rst_n_i, prog_dat_i, pc_reg, prog_adr_o);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  input [12:0] pc_reg;
  wire [12:0] pc_reg;
  input pon_rst_n_i;
  wire pon_rst_n_i;
  output [12:0] prog_adr_o;
  wire [12:0] prog_adr_o;
  input [13:0] prog_dat_i;
  wire [13:0] prog_dat_i;
  \not  _26_ (
    .A(pc_reg[6]),
    .Y(_00_)
  );
  \not  _27_ (
    .A(pc_reg[11]),
    .Y(_01_)
  );
  \nor  _28_ (
    .A(prog_dat_i[10]),
    .B(prog_dat_i[11]),
    .Y(_02_)
  );
  \nand  _29_ (
    .A(prog_dat_i[12]),
    .B(prog_dat_i[13]),
    .Y(_03_)
  );
  \nor  _30_ (
    .A(_02_),
    .B(_03_),
    .Y(_04_)
  );
  \and  _31_ (
    .A(prog_dat_i[12]),
    .B(prog_dat_i[13]),
    .Y(_05_)
  );
  \nand  _32_ (
    .A(pon_rst_n_i),
    .B(_05_),
    .Y(_06_)
  );
  \nor  _33_ (
    .A(_04_),
    .B(_06_),
    .Y(_07_)
  );
  \nand  _34_ (
    .A(pc_reg[1]),
    .B(_07_),
    .Y(_08_)
  );
  \xor  _35_ (
    .A(pc_reg[1]),
    .B(_07_),
    .Y(prog_adr_o[1])
  );
  \or  _36_ (
    .A(pc_reg[1]),
    .B(pc_reg[2]),
    .Y(_09_)
  );
  \or  _37_ (
    .A(_07_),
    .B(_09_),
    .Y(_10_)
  );
  \xnor  _38_ (
    .A(pc_reg[2]),
    .B(_08_),
    .Y(prog_adr_o[2])
  );
  \or  _39_ (
    .A(pc_reg[3]),
    .B(_10_),
    .Y(_11_)
  );
  \xor  _40_ (
    .A(pc_reg[3]),
    .B(_10_),
    .Y(prog_adr_o[3])
  );
  \nand  _41_ (
    .A(pc_reg[3]),
    .B(pc_reg[4]),
    .Y(_12_)
  );
  \or  _42_ (
    .A(pc_reg[4]),
    .B(_11_),
    .Y(_13_)
  );
  \xor  _43_ (
    .A(pc_reg[4]),
    .B(_11_),
    .Y(prog_adr_o[4])
  );
  \nand  _44_ (
    .A(pc_reg[5]),
    .B(_09_),
    .Y(_14_)
  );
  \and  _45_ (
    .A(_12_),
    .B(_14_),
    .Y(_15_)
  );
  \nand  _46_ (
    .A(pc_reg[5]),
    .B(_13_),
    .Y(_16_)
  );
  \xor  _47_ (
    .A(pc_reg[5]),
    .B(_13_),
    .Y(prog_adr_o[5])
  );
  \nor  _48_ (
    .A(_00_),
    .B(_16_),
    .Y(_17_)
  );
  \xnor  _49_ (
    .A(pc_reg[6]),
    .B(_16_),
    .Y(prog_adr_o[6])
  );
  \and  _50_ (
    .A(_00_),
    .B(_15_),
    .Y(_18_)
  );
  \nor  _51_ (
    .A(pc_reg[7]),
    .B(_17_),
    .Y(_19_)
  );
  \nand  _52_ (
    .A(pc_reg[7]),
    .B(_07_),
    .Y(_20_)
  );
  \nor  _53_ (
    .A(_18_),
    .B(_20_),
    .Y(_21_)
  );
  \nor  _54_ (
    .A(_19_),
    .B(_21_),
    .Y(prog_adr_o[7])
  );
  \or  _55_ (
    .A(pc_reg[8]),
    .B(_21_),
    .Y(_22_)
  );
  \xor  _56_ (
    .A(pc_reg[8]),
    .B(_21_),
    .Y(prog_adr_o[8])
  );
  \or  _57_ (
    .A(pc_reg[9]),
    .B(_22_),
    .Y(_23_)
  );
  \xor  _58_ (
    .A(pc_reg[9]),
    .B(_22_),
    .Y(prog_adr_o[9])
  );
  \nand  _59_ (
    .A(pc_reg[10]),
    .B(_23_),
    .Y(_24_)
  );
  \xor  _60_ (
    .A(pc_reg[10]),
    .B(_23_),
    .Y(prog_adr_o[10])
  );
  \and  _61_ (
    .A(_01_),
    .B(_24_),
    .Y(_25_)
  );
  \xnor  _62_ (
    .A(pc_reg[11]),
    .B(_24_),
    .Y(prog_adr_o[11])
  );
  \xnor  _63_ (
    .A(pc_reg[12]),
    .B(_25_),
    .Y(prog_adr_o[12])
  );
  assign prog_adr_o[0] = pc_reg[0];
endmodule
